#!/sbin/sh

export ZIPFILE="$3"
export OUTFD="/proc/self/fd/$2"
export TMP="/tmp"

bb="$TMP/busybox-arm"
l="$TMP/bin"

ui_print() {
  echo "ui_print $1" > "$OUTFD";
  echo "ui_print" > "$OUTFD";
}

ui_print "";       
ui_print "*************************************";
ui_print "*                                   *";
ui_print "*       Adreno Drivers Recovery     *";
ui_print "*                                   *";
ui_print "*************************************";
ui_print "*                                   *";
ui_print "*          [DRIVER_VERSION]         *";
ui_print "*                                   *";
ui_print "*************************************";
ui_print "*                                   *";
ui_print "*          by Ccrlll !(^_-)         *";
ui_print "*                                   *";
ui_print "*************************************";
ui_print "";

if mountpoint -q "/vendor"; then
    ui_print "Vendor is mounted."
else
    ui_print "Vendor is not mounted. Please mount if first."
    exit
fi

mount -o rw,remount /vendor
touch /vendor/ccrlll

FILE=/vendor/ccrlll
if test -f "$FILE"; then
    ui_print "Vendor seems fine. Continuing..."
    rm /vendor/ccrlll
else
    ui_print "Vendor is not fine. Aborting..."
    exit
fi

ui_print "Unzipping."
unzip -o "$ZIPFILE" "lib/*" -d "/vendor";
unzip -o "$ZIPFILE" "lib64/*" -d "/vendor";
unzip -o "$ZIPFILE" "files.sh" -d "$TMP";
sh $TMP/files.sh

ui_print "Removing shader caches."
SHADERS=$(find /data/user_de -name *shaders_cache* -type f | grep code_cache)
for value in $SHADERS
do
  rm -rf $value;
done

ui_print "Done."